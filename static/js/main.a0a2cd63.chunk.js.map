{"version":3,"sources":["components/PaymentForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["PaymentForm","required","value","undefined","mustBeString","match","composeValidators","validators","reduce","error","validator","getInputClass","meta","classOfInput","classes","touched","className","onSubmit","values","window","alert","JSON","stringify","initialValues","render","handleSubmit","form","submitting","pristine","novalidate","name","validate","input","type","placeholder","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0a2cd63.chunk.js","sourcesContent":["import { Form, Field } from \"react-final-form\";\r\n\r\nexport const PaymentForm = () => {\r\n    const onSubmit = (values) => {\r\n        window.alert(JSON.stringify(values, 0, 2));\r\n    };\r\n    const formData = {};\r\n    const required = (value) => (value ? undefined : \"Required\");\r\n    const mustBeString = (value) => {\r\n        const matchPattern = value.match(/\\d+/g);\r\n        if (matchPattern !== null) {\r\n            return \"Must not contain numbers\"\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    const composeValidators = (...validators) => (value) => {\r\n        validators.reduce((error, validator) => error || validator(value), undefined);\r\n    }\r\n\r\n    const getInputClass = (meta, classOfInput = \"form-control\") => {\r\n        let classes = classOfInput;\r\n\r\n        if (meta.error && meta.touched) {\r\n            classes += ' is-invalid';\r\n        }\r\n\r\n        return classes;\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment-form vh-100 d-flex justify-content-center align-items-center\">\r\n            <div className=\"container col-md-6\">\r\n                <h2 className=\"payment-form__title\">Payment form</h2>\r\n                <Form\r\n                    onSubmit={onSubmit}\r\n                    initialValues={formData}\r\n                    render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                        <form\r\n                            onSubmit={handleSubmit}\r\n                            className=\"row g-3 needs-validation\"\r\n                            novalidate\r\n                        >\r\n                            <Field\r\n                                name=\"firstName\"\r\n                                validate={composeValidators(required, mustBeString)}\r\n                            >\r\n                                {({ input, meta }) => (\r\n                                    <div className=\"col-md-6\">\r\n                                        <label form=\"validationFirstName\" className=\"form-label\">First Name</label>\r\n                                        <input\r\n                                            {...input} type=\"text\"\r\n                                            placeholder=\"First Name\"\r\n                                            className={getInputClass(meta)}\r\n                                            id=\"validationFirstName\"\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">{meta.error}</div>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n\r\n                            <Field\r\n                                name=\"lastName\"\r\n                                validate={required}\r\n                            >\r\n                                {({ input, meta }) => (\r\n                                    <div className=\"col-md-6\">\r\n                                        <label form=\"validationLastName\" className=\"form-label\">Last Name</label>\r\n                                        <input\r\n                                            {...input} type=\"text\"\r\n                                            placeholder=\"Last Name\"\r\n                                            className={getInputClass(meta)}\r\n                                            id=\"validationLastName\"\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">{meta.error}</div>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n\r\n                            <Field\r\n                                name=\"country\"\r\n                                validate={required}\r\n                            >\r\n                                {({ input, meta }) => (\r\n                                    <div className=\"col-md-6\">\r\n                                        <label form=\"validationCountry\" className=\"form-label\">Country</label>\r\n                                        <input\r\n                                            {...input} type=\"text\"\r\n                                            placeholder=\"Country\"\r\n                                            className={getInputClass(meta)}\r\n                                            id=\"validationCountry\"\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">{meta.error}</div>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n\r\n                            <Field\r\n                                name=\"address\"\r\n                                validate={required}\r\n                            >\r\n                                {({ input, meta }) => (\r\n                                    <div className=\"col-md-6\">\r\n                                        <label form=\"validationAddress\" className=\"form-label\">Address</label>\r\n                                        <input\r\n                                            {...input} type=\"text\"\r\n                                            placeholder=\"Address\"\r\n                                            className={getInputClass(meta)}\r\n                                            id=\"validationAddress\"\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">{meta.error}</div>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n\r\n                            <Field\r\n                                name=\"creditCard\"\r\n                                validate={required}\r\n                            >\r\n                                {({ input, meta }) => (\r\n                                    <div className=\"col-md-10\">\r\n                                        <label form=\"validationCreditCard\" className=\"form-label\">Credit Card</label>\r\n                                        <input\r\n                                            {...input} type=\"text\"\r\n                                            placeholder=\"XXXX XXXX XXXX XXXX\"\r\n                                            className={getInputClass(meta)}\r\n                                            id=\"validationCreditCard\"\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">{meta.error}</div>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n\r\n                            <Field\r\n                                name=\"cvv2Code\"\r\n                                validate={required}\r\n                            >\r\n                                {({ input, meta }) => (\r\n                                    <div className=\"col-md-2\">\r\n                                        <label form=\"validationCvv2Code\" className=\"form-label\">CVV2</label>\r\n                                        <input\r\n                                            {...input} type=\"text\"\r\n                                            placeholder=\"CVV2\"\r\n                                            className={getInputClass(meta)}\r\n                                            id=\"validationCvv2Code\"\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">{meta.error}</div>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n\r\n                            <Field\r\n                                name=\"email\"\r\n                            >\r\n                                {({ input, meta }) => (\r\n                                    <div className=\"col-md-12\">\r\n                                        <label form=\"validationEmail\" className=\"form-label\">Email for a receipt</label>\r\n                                        <input\r\n                                            {...input} type=\"text\"\r\n                                            placeholder=\"Email\"\r\n                                            className={getInputClass(meta)}\r\n                                            id=\"validationEmail\"\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">{meta.error}</div>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n\r\n                            <Field\r\n                                name=\"agreement\"\r\n                                validate={required}\r\n                            >\r\n                                {({ input, meta }) => (\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-check\">\r\n                                            <input\r\n                                                {...input}\r\n                                                type=\"checkbox\"\r\n                                                value=\"\"\r\n                                                className={getInputClass(meta, \"form-check-input\")}\r\n                                                id=\"validationAgreement\"\r\n                                            />\r\n                                            <label form=\"validationAgreement\" className=\"form-check-label\">Agree with terms of use</label>\r\n                                            <div className=\"invalid-feedback\">You must agree before submitting.</div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n\r\n                            <div className=\"d-grid gap-2 text-align-center\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary payment-form__submit\"\r\n                                >\r\n                                    Pay\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { PaymentForm } from \"./components/PaymentForm\";\nimport './App.scss';\n\nfunction App() {\n  return (\n      <PaymentForm />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}